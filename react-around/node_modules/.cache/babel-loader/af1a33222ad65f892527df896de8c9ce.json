{"ast":null,"code":"var _jsxFileName = \"/home/quinn/Projects/GoAround/react-around/src/components/Gallery.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport GridGallery from 'react-grid-gallery';\nexport class Gallery extends Component {\n  render() {\n    const images = this.props.images.map(image => {\n      return { ...image,\n        customOverlay: /*#__PURE__*/React.createElement(\"div\", {\n          style: captionStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }\n        }, `${image.user}: ${image.caption}`))\n      };\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: wrapperStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GridGallery, {\n      backdropClosesModal: true,\n      images: images,\n      enableImageSelection: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    user: PropTypes.string.isRequired,\n    src: PropTypes.string.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n    caption: PropTypes.string,\n    thumbnailWidth: PropTypes.number.isRequired,\n    thumbnailHeight: PropTypes.number.isRequired\n  })).isRequired\n};\nconst wrapperStyle = {\n  display: \"block\",\n  minHeight: \"1px\",\n  width: \"100%\",\n  border: \"1px solid #ddd\",\n  overflow: \"auto\"\n};\nconst captionStyle = {\n  backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n  maxHeight: \"240px\",\n  overflow: \"hidden\",\n  position: \"absolute\",\n  bottom: \"0\",\n  width: \"100%\",\n  color: \"white\",\n  padding: \"2px\",\n  fontSize: \"90%\"\n};","map":{"version":3,"sources":["/home/quinn/Projects/GoAround/react-around/src/components/Gallery.js"],"names":["React","Component","PropTypes","GridGallery","Gallery","render","images","props","map","image","customOverlay","captionStyle","user","caption","wrapperStyle","propTypes","arrayOf","shape","string","isRequired","src","thumbnail","thumbnailWidth","number","thumbnailHeight","display","minHeight","width","border","overflow","backgroundColor","maxHeight","position","bottom","color","padding","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,OAAO,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAcrCI,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAAX,CAAkBE,GAAlB,CAAuBC,KAAD,IAAW;AAC9C,aAAO,EACL,GAAGA,KADE;AAELC,QAAAA,aAAa,eACX;AAAK,UAAA,KAAK,EAAEC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO,GAAEF,KAAK,CAACG,IAAK,KAAIH,KAAK,CAACI,OAAQ,EAAtC,CADF;AAHG,OAAP;AAQD,KATc,CAAf;AAWA,wBACE;AAAK,MAAA,KAAK,EAAEC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,mBAAmB,MADrB;AAEE,MAAA,MAAM,EAAER,MAFV;AAGE,MAAA,oBAAoB,EAAE,KAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAQD;;AAlCoC;AAA1BF,O,CACJW,S,GAAY;AACjBT,EAAAA,MAAM,EAAEJ,SAAS,CAACc,OAAV,CACNd,SAAS,CAACe,KAAV,CAAgB;AACdL,IAAAA,IAAI,EAAEV,SAAS,CAACgB,MAAV,CAAiBC,UADT;AAEdC,IAAAA,GAAG,EAAElB,SAAS,CAACgB,MAAV,CAAiBC,UAFR;AAGdE,IAAAA,SAAS,EAAEnB,SAAS,CAACgB,MAAV,CAAiBC,UAHd;AAIdN,IAAAA,OAAO,EAAEX,SAAS,CAACgB,MAJL;AAKdI,IAAAA,cAAc,EAAEpB,SAAS,CAACqB,MAAV,CAAiBJ,UALnB;AAMdK,IAAAA,eAAe,EAAEtB,SAAS,CAACqB,MAAV,CAAiBJ;AANpB,GAAhB,CADM,EASNA;AAVe,C;AAqCrB,MAAML,YAAY,GAAG;AACnBW,EAAAA,OAAO,EAAE,OADU;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,KAAK,EAAE,MAHY;AAInBC,EAAAA,MAAM,EAAE,gBAJW;AAKnBC,EAAAA,QAAQ,EAAE;AALS,CAArB;AAQA,MAAMlB,YAAY,GAAG;AACnBmB,EAAAA,eAAe,EAAE,oBADE;AAEnBC,EAAAA,SAAS,EAAE,OAFQ;AAGnBF,EAAAA,QAAQ,EAAE,QAHS;AAInBG,EAAAA,QAAQ,EAAE,UAJS;AAKnBC,EAAAA,MAAM,EAAE,GALW;AAMnBN,EAAAA,KAAK,EAAE,MANY;AAOnBO,EAAAA,KAAK,EAAE,OAPY;AAQnBC,EAAAA,OAAO,EAAE,KARU;AASnBC,EAAAA,QAAQ,EAAE;AATS,CAArB","sourcesContent":["import React, { Component }from 'react';\nimport PropTypes from 'prop-types';\nimport GridGallery from 'react-grid-gallery';\n\nexport class Gallery extends Component {\n  static propTypes = {\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        user: PropTypes.string.isRequired,\n        src: PropTypes.string.isRequired,\n        thumbnail: PropTypes.string.isRequired,\n        caption: PropTypes.string,\n        thumbnailWidth: PropTypes.number.isRequired,\n        thumbnailHeight: PropTypes.number.isRequired\n      })\n    ).isRequired\n  }\n\n  render() {\n    const images = this.props.images.map((image) => {\n      return {\n        ...image,\n        customOverlay: (\n          <div style={captionStyle}>\n            <div>{`${image.user}: ${image.caption}`}</div>\n          </div>\n        ),\n      };\n    });\n\n    return (\n      <div style={wrapperStyle}>\n        <GridGallery\n          backdropClosesModal\n          images={images}\n          enableImageSelection={false}/>\n      </div>\n    );\n  }\n}\n\n\nconst wrapperStyle = {\n  display: \"block\",\n  minHeight: \"1px\",\n  width: \"100%\",\n  border: \"1px solid #ddd\",\n  overflow: \"auto\"\n};\n\nconst captionStyle = {\n  backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n  maxHeight: \"240px\",\n  overflow: \"hidden\",\n  position: \"absolute\",\n  bottom: \"0\",\n  width: \"100%\",\n  color: \"white\",\n  padding: \"2px\",\n  fontSize: \"90%\"\n};\n"]},"metadata":{},"sourceType":"module"}